/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

#include <string>
class Solution {
public:
    void binaryTreePaths_helper(TreeNode* root, string s, vector<string>& vec){
        if(root->left == NULL && root->right == NULL){
            s = s + to_string(root->val);
            vec.push_back(s);
            return;
        }
        s = s + to_string(root->val) + "->";
        if(root->left){
            binaryTreePaths_helper(root->left, s, vec);
        }
        if(root->right){
            binaryTreePaths_helper(root->right, s, vec);
        }
        return;
    } 
    
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> res;
        if(root == NULL)
            return res;
        string str;
        binaryTreePaths_helper(root, str, res);
        return res;
    }
};
