/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(headA == NULL || headB == NULL)
            return NULL;
        ListNode* p1 = headA;
        ListNode* p2 = headB;
        int lengthA = 0;
        int lengthB = 0;
        while(p1->next){
            lengthA++;
            p1 = p1->next;
        }
        while(p2->next){
            lengthB++;
            p2 = p2->next;
        }
        if(p1 != p2)
            return NULL;
        p1 = headA;
        p2 = headB;
        for(int i = 0; i < abs(lengthA - lengthB); i++){
            if(lengthA > lengthB)
                p1 = p1->next;
            else
                p2 = p2->next;
        }
        while(p1){
            if(p1 == p2)
                return p1;
            else{
                p1 = p1->next;
                p2 = p2->next;
            }
        }
        return NULL;
    }
};
