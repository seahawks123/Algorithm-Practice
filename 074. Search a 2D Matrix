class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        if(m == 0)
            return false;
        int n = matrix[0].size();
        if(n == 0)
            return false;
        int low = 0, high = m-1;
        int target_row = 0;
        while(low <= high){
            int mid = (low + high)/2;
            if(matrix[mid][0] ==  target){
                return true;
            }
            if(matrix[mid][0] < target && target <= matrix[mid][n-1]){
                target_row = mid;
                break;
            }
            if(target > matrix[mid][0]){
                low = mid+1;
            }
            else{
                high = mid-1;
            }
        }
        low = 0;
        high = n-1;
        while(low <= high){
            int mid = (low + high)/2;
            if(matrix[target_row][mid] == target){
                return true;
            }
            else if(matrix[target_row][mid] < target){
                low = mid + 1;
            }
            else{
                high = mid - 1;
            }
        }
        return false;
        
    }
};
