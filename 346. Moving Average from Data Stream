class MovingAverage {
private:
    queue<int> q;
    int cap = 0;
    int _size = 0;
    double sum = 0;
public:
    /** Initialize your data structure here. */
    MovingAverage(int size) {
        cap = size;           
    }
    
    double next(int val) {
        if(cap == 0)
            return 0;
        if(_size < cap){
            sum += val;
            _size++;
            q.push(val);
           
        }
        else{
            double temp = q.front();
            q.pop();
            q.push(val);
            sum = sum - temp + val;
          
        }
        return sum/_size;
    }
};

/**
 * Your MovingAverage object will be instantiated and called as such:
 * MovingAverage obj = new MovingAverage(size);
 * double param_1 = obj.next(val);
 
 
 
 
 class MovingAverage {
public:
    MovingAverage(int size) {
        this->size = size;
        sum = 0;
    }
    
    double next(int val) {
        if (q.size() >= size) {
            sum -= q.front(); q.pop();
        }
        q.push(val);
        sum += val;
        return sum / q.size();
    }
    
private:
    queue<int> q;
    int size;
    double sum;
};
