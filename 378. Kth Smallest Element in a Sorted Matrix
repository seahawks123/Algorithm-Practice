class Solution {
public:
    int kthSmallest(vector<vector<int>>& matrix, int k) {
        int m = matrix.size();
        int n = matrix[0].size();
        int count = 0;
        int low = 0, high = m-1;
        while(low <= high){
            int mid = (low + high)/2;
            if(k > mid*n && k <= (mid+1)*n){
                count = mid*n;
                low = 0;
                high = n - 1;
                while(low <= high){
                    int m = (low + high)/2;
                    if(count + m + 1 == k){
                        return matrix[mid][m];
                    }
                    else if(count + m + 1 > k){
                        high = m - 1;
                    }
                    else{
                        low = m + 1;
                    }
                    
                }    
            }
            else if(k <= mid*n){
                high = mid - 1;
            }
            else if(k > (mid+1)*n){
                low = mid + 1;
            }
        }
        return -1;
    }
};
