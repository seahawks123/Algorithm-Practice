class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        if(nums.size() <= 3)
            return vector<vector<int>> (0);
        vector<vector<int>> res;
        sort(nums.begin(), nums.end());
        for(int i = 0; i < nums.size() - 3; i++){
            if(i > 0 && nums[i] == nums[i-1])
                continue;
            int prev = INT_MAX;
            for(int j = i + 1; j < nums.size()-2; j++){
                if(j != i + 1 && nums[j] == nums[j-1])
                    continue;
                prev = nums[j];
                int left = j + 1;
                int right = nums.size()-1;
                while(left < right){
                    int sum = nums[i] + nums[j] + nums[left] + nums[right];
                    if(sum == target){
                        int temp[] = {nums[i], nums[j], nums[left], nums[right]};   
                        vector<int> cur(temp, temp + sizeof(temp)/sizeof(temp[0]));
                        res.push_back(cur);
                        left++;
                        right--;
                        while(left < right && nums[left] == nums[left - 1]){
                            left++;
                        }
                        while(left < right && nums[right] == nums[right + 1]){
                            right--;
                        }
                    }
                    else if(sum > target){
                        right--;    
                    }
                    else{
                        left++;
                    }
                }
            }
        }
        return res;
    }
};
