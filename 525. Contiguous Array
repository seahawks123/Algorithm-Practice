class Solution {
public:
    int findMaxLength(vector<int>& nums) {
        if(nums.size() == 0)
            return 0;
        int res = INT_MIN;
        for(int i = 0; i < nums.size(); i++){
            int count0 = 0, count1 = 0;
            for(int j = i; j < nums.size(); j++){
                if(nums[j] == 0){
                    count0++;
                }    
                else
                    count1++;
                if(count0 == count1){
                    res = max(res, j - i + 1);
                }
            }
        }
        return (res == INT_MIN?0:res);
    }
};



class Solution {
public:
    int findMaxLength(vector<int>& nums) {
        int sum = 0, res = 0;
        unordered_map<int, int> map;
        for(int i = 0; i < nums.size(); i++){
            if(nums[i] == 0)
                nums[i] = -1;
            sum += nums[i];
            if(sum == 0)
                res = max(res, i + 1);
            if(map.count(sum)){
                res = max(res, i - map[sum]);
            }
            if(!map.count(sum)){
                map[sum] = i;
            }
        }
        return res;
    }
};
