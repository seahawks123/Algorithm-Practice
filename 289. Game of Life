class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int row = board.size();
        if(row == 0)
            return;
        int col = board[0].size();
        if(col == 0)
            return;
        for(int i = 0; i < row; i++){
            for(int j = 0; j < col; j++){
                int sum = 0;
                int w = (j-1 >=0)?board[i][j-1]%10:0;
                int e = (j+1 < col)?board[i][j+1]%10:0;
                int s = (i+1 < row)?board[i+1][j]%10:0;
                int n = (i-1 >=0)?board[i-1][j]%10:0;
                int ne = ((i-1>=0) && (j+1<col))?board[i-1][j+1]%10:0;
                int se = ((i+1<row) && (j+1<col))?board[i+1][j+1]%10:0;
                int sw = ((i+1<row) && (j-1>=0))?board[i+1][j-1]%10:0;
                int nw = ((i-1>=0) && (j-1>=0))?board[i-1][j-1]%10:0;
                sum = w + e + s + n + ne + se + sw + nw;
                if(sum < 2 || sum > 3){
                    if(board[i][j] == 1){
                        board[i][j] = 11;
                    }
                }
                else if(board[i][j] == 1 && sum > 3){
                    board[i][j] = 1;
                }
                else if(sum == 3 && board[i][j] == 0){
                    board[i][j] = 10;
                }
                
            }
        }
        
        for(int i = 0; i < row; i++){
            for(int j = 0; j < col; j++){
                if(board[i][j] == 11)
                    board[i][j] = 0;
                else if(board[i][j] == 10){
                    board[i][j] = 1;
                }
            }
        }
        
        return;
    }
};
