class Solution {
private:
    int count_ones(int n){
        uint32_t mask = 1 << 31;
        int count = 0;
        while(mask){
            if(n & mask){
                count++;
            }
            mask = mask >> 1;
        }
        return count;
        
    }
public:
    vector<int> countBits(int num) {
        vector<int> vec(num + 1, 0);
        for(int i = 1; i <= num; i++){
            vec[i] = count_ones(i);
        }
        return vec;
    }
};


class Solution {
public:
    vector<int> countBits(int num) {
        vector<int> vec(num + 1, 0);
        for(int i = 1; i <= num; i++){
            vec[i] = vec[i >> 1] + (i & 1);
        }
        return vec;
    }
};
