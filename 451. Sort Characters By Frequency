class Solution {
public:
    string frequencySort(string s) {
        unordered_map<char, int> _map; 
        for(int i = 0; i < s.length(); i++){
            _map[s[i]]++;
        }
        
        priority_queue<pair<int, char>> q;
        for(unordered_map<char, int>::iterator it = _map.begin(); it != _map.end(); it++){
            q.push(make_pair(it->second, it->first));
        }
        
        string res;
        while(!q.empty()){
            pair<int, char> temp = q.top();
            q.pop();
            string ss;
            for(int i = 0; i < temp.first; i++){
                ss.push_back(temp.second);   
            }
            res = res + ss;
            ss.clear();
        }
        return res;
    }
};
