class Solution {
public:
  int maxProfit(vector<int>& prices) {
    if(prices.size() <= 1)
      return 0;
    pair<int, int> min= make_pair(INT_MAX, 0);
    pair<int, int> max= make_pair(INT_MIN, 0);
    for(int i = 0; i < prices.size(); i++){
      if(prices[i] >= max.first){
        max = make_pair(prices[i], i);
      }
      if(prices[i] <= min.first){
        min = make_pair(prices[i], i);
      }
    }

    return (max.first-min.first);
  }
};


class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.size() <= 1)
            return 0;
        int max_profit = 0;
        int cur_min = prices[0];
        for(int i = 1; i < prices.size(); i++){
            cur_min = min(cur_min, prices[i]);
            max_profit = max(max_profit, prices[i] - cur_min);
        }
        return max_profit;
    }
};
