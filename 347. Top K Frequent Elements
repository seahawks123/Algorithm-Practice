class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> _map;
        for(int i = 0; i < nums.size(); i++){
            _map[nums[i]]++;
        }
        priority_queue<pair<int, int>> q;
        for(unordered_map<int, int>::iterator it = _map.begin(); it != _map.end(); it++){
            q.push(make_pair(it->second, it->first));
        }
        vector<int> vec;
        for(int i = 0; i < k; i++){
            vec.push_back(q.top().second);
            q.pop();
        }
        return vec;
    }
};
