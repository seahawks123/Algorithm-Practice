/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 class Solution {
 public:
 	vector<vector<int>> levelOrder(TreeNode* root) {
 		vector<vector<int>> res;
 		if(!root)
 			return res;
 		vector<TreeNode*>* cur = new vector<TreeNode*>();
 		cur->push_back(root);
 		vector<TreeNode*>* next = new vector<TreeNode*>();
 		while(!cur->empty()){
 			vector<int> level_res;
 			for(int i = 0; i < cur->size(); i++){
 			    TreeNode* curNode = (*cur)[i];
 				level_res.push_back(curNode->val);
 				if(curNode->left){
 					next->push_back(curNode->left);
 				}
 				if(curNode->right){
 					next->push_back(curNode->right);
 				}
 			}
 			vector<TreeNode*>* temp;
 			temp = cur;
 			cur = next;
 			next = temp;
 			next->clear();
 			res.push_back(level_res);
 			
 		}
 		return res; 
 	}
 };
