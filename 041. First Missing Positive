class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        int min_val = INT_MAX;
        int sum = 0;
        for(int i = 0; i < nums.size(); i++){
            min_val = min(min_val, nums[i]);
            sum += nums[i];
        }
        int sum_missing = 0;
        for(int i = min_val; i <= nums.size(); i++){
            sum_missing += i;    
        }
        return (sum - sum_missing);
    }
};



class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        int i = 0; 
        while(i < nums.size()){
            if(nums[i] > 0 && nums[i] <= nums.size() && nums[i] != nums[nums[i]-1]){
                swap(nums[i], nums[nums[i] - 1]);
            }
            else{
                i++;    
            }
        }
        for(int i = 0; i < nums.size(); i++){
            if(nums[i] != i+1)
                return i+1;
        }
        return nums.size()+1;
    }
};
