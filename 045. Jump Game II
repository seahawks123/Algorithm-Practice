class Solution {
public:
    int jump(vector<int>& nums) {
        vector<int> dp(nums.size(), 0);
        for(int i = 1; i < nums.size(); i++){
            int res = INT_MAX;
            for(int j = i-1; j >= 0; j--){
                if((i-j) <= nums[j]){
                    res = min(1 + dp[j], res);
                }        
            }
            dp[i] = res;
        }
        return dp[nums.size()-1];
    }
};


class Solution {
public:
    int jump(vector<int>& nums) {
        int res = 0, end = 0, nextEnd = 0;
        for(int i = 0; i < nums.size(); i++){
            if(end >= nums.size() - 1){
                return res;
            }
            nextEnd = max(nextEnd, i + nums[i]);
            if(i == end){
                res++;
                end = nextEnd;
            }
        }
        return res;
    }
};
