class Solution {
public:
    int maxArea(vector<int>& height) {
        int res = min(height[0], height[1]);
        int cur = height[1];
        for(int i =2; i < height.size(); i++){
            cur = min(cur, height[i]);
            res = max(cur, res);
            cur = height[i];
        }
        return res;
    }
};

class Solution {
public:
    int maxArea(vector<int>& height) {
        int res = INT_MIN;
        for(int i = 0; i < height.size(); i++){
            for(int j = i + 1; j < height.size(); j++){
                int base = j - i;
                res = max(res, base*min(height[i], height[j]));
            }
        }
        return res;
    }
};



class Solution {
public:
    int maxArea(vector<int>& height) {
        int res = INT_MIN;
        int left = 0;
        int right = height.size()-1;
        while(left < right){
            res = max(res, min(height[left], height[right])*(right - left));
            if(height[left] <= height[right]){
                left++;  
            }
            else{
                right--;
            }
        }
        return res;
    }
};
