class Solution {
private:
    bool static cmp(const pair<int, int>& a, const pair<int, int>& b){
        return a.first < b.first;    
    }
    
public:
    int maxEnvelopes(vector<pair<int, int>>& envelopes) {
        if(envelopes.size() == 0)
            return 0;
        sort(envelopes.begin(), envelopes.end(), cmp);
        vector<int> dp(envelopes.size(), 1);
        int res = INT_MIN;
        for(int i = 1; i < envelopes.size(); i++){
            for(int j = 0; j < i; j++){
                if(envelopes[j].second < envelopes[i].second && envelopes[j].first < envelopes[i].first){
                    dp[i] = max(dp[i], dp[j] + 1);
                }    
            }
            res = max(res, dp[i]);
        }
        return res == INT_MIN?1:res;
    }
};
