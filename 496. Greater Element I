class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {
        vector<int> res;
        unordered_map<int, int> map;
        for(int i = 0; i < nums.size(); i++){
            map[nums[i]] = i;    
        }
        for(int i = 0; i < findNums.size(); i++){
            int next = INT_MAX;
            for(int j = map[findNums[i]] + 1; j < nums.size(); j++){
                if(nums[j] > findNums[i]){
                    next = nums[j];
                    res.push_back(next);
                    break;
                }
            }
            if(next == INT_MAX)
                res.push_back(-1);
        }        
        return res;
    }
};


class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {
        vector<int> res;
        unordered_map<int, int> map;
        stack<int> s;
        for(int i = 0; i < nums.size(); i++){
            if(s.empty()){
                s.push(nums[i]);
                continue;
            }
            while(!s.empty() && (s.top() < nums[i])){
                map[s.top()] = nums[i];
                s.pop();
            }
            s.push(nums[i]);
        }
        while(!s.empty()){
            map[s.top()] = -1;
            s.pop();
        }
        for(int i = 0; i < findNums.size(); i++){
            res.push_back(map[findNums[i]]);
        }
        return res;
    }
};
