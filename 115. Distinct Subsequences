class Solution {
public:
    int numDistinct(string s, string t) {
        if(s.size() < t.size())
            return 0;
        if(s == t)
            return 1;
        if(s[0] != t[0]){
            return numDistinct(s.substr(1), t);
        }
        return numDistinct(s.substr(1), t) + numDistinct(s.substr(1), t.substr(1));
        
    }
};


class Solution {
public:
    int numDistinct(string s, string t) {
        vector<vector<int>> dp(t.size() + 1, vector<int>(s.size() + 1, 0));
        for(int i = 0; i <= s.size(); i++){
            dp[0][i] = 1;        
        }
        for(int i = 1; i <= t.size(); i++){
            for(int j = 1; j <= s.size(); j++){
                if(t[i-1] != s[j-1]){
                    dp[i][j] = dp[i][j-1];
                } 
                else{
                    dp[i][j] = dp[i-1][j-1] + dp[i][j-1];
                }
            }
        }
        return dp[t.size()][s.size()];
    }
};
