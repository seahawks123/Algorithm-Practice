class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int> q;
        vector<int> res;
        if(nums.size() == 0)
            return res;
        int max_val = INT_MIN;
        for(int i = 0; i < nums.size(); i++){
            if(q.size() < k){
                q.push_back(nums[i]); 
                if(q.size() == 1){
                    max_val = nums[i];
                }
                else{
                    max_val = max(max_val, nums[i]);
                }
            }        
            else{
                if(max_val <= nums[i]){
                    max_val = nums[i];
                }
                else if(max_val == q.front()){
                    int temp = INT_MIN;
                    for(int i = 1; i < q.size(); i++){
                        temp = max(temp, q[i]);
                    }
                    max_val = max(temp, nums[i]);
                }
                q.pop_front();
                q.push_back(nums[i]);
            }
            if(i + 1 >= k)
                res.push_back(max_val);    
        }
        return res;
    }
};
