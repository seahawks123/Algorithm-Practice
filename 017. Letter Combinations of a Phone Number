class Solution {
    void dfs(string digits, int index, vector<string>& res, string& cur, string dict[]){
        if(index == digits.length()){
            res.push_back(cur);
            return;
        }
        string now = dict[digits[index] - '0'];
        for(int i = 0; i < now.size(); i++){
            cur.push_back(now[i]);
            dfs(digits, index + 1, res, cur, dict);
            cur.pop_back();
        }
    }
    
public:
    vector<string> letterCombinations(string digits) {
        string dict[] = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        vector<string> res;
        if(digits.size() == 0)
            return res;
        string cur;
        dfs(digits, 0, res, cur, dict);
        return res;
    }
};
