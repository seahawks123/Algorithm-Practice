/**
 * Definition for binary tree with next pointer.
 * struct TreeLinkNode {
 *  int val;
 *  TreeLinkNode *left, *right, *next;
 *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
 * };
 */
class Solution {
public:
    void connect(TreeLinkNode *root) {
         if(!root)
            return;
        vector<TreeLinkNode*>* cur = new vector<TreeLinkNode*>();
        vector<TreeLinkNode*>* next = new vector<TreeLinkNode*>();
        cur->push_back(root);
        while(!cur->empty()){
            for(int i = 0; i < cur->size(); i++){
                if(i < cur->size()-1)
                    (*cur)[i]->next = (*cur)[i+1];
                TreeLinkNode* curNode = (*cur)[i];
                if(curNode->left){
                    next->push_back(curNode->left);
                }
                if(curNode->right){
                    next->push_back(curNode->right);
                }
            }
            vector<TreeLinkNode*>* temp = cur;
            cur = next;
            next = temp;
            next->clear();
        }
        return;
    }
};
