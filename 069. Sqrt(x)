class Solution {
public:
    int mySqrt(int x) {
        long long low = 0;
        long long high = x;
        while(low <= high){
            long long mid = low + (high - low)/2;
            if(mid * mid == x)
                return mid;
            else if(mid*mid > x){
                high = mid-1;
            }
            else{
                low = mid + 1;
            }
        }
        return high;
    }
};

class Solution {
public:
    int mySqrt(int x) {
        if (x == 0)
        return 0;
        int left = 1, right = x;
        while (true) {
            int mid = left + (right - left)/2;
            if (mid > x/mid) {
                right = mid - 1;
            } 
            else {
                if (mid + 1 > x/(mid + 1))
                    return mid;
                left = mid + 1;
            }
        }
    }
};



class Solution {
public:
    int mySqrt(int x) {
        if(x <= 0)
            return x;
        double res = x;
        double delta  = 0.0001;
        while (abs(res*res - x) > delta) {
            res = (x/(2*res) + (res/2));
        }
        return res;
    }
};
