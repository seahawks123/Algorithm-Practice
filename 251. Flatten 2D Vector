class Vector2D {
private:
    int x, y;
    vector<vector<int>> vec;
public:
    Vector2D(vector<vector<int>>& vec2d) {
        x = 0;
        y = 0;
        vec = vec2d;
        
    }

    int next() {
        return vec[x][y++];
    }

    bool hasNext() {
        while(x < vec.size() && y == vec[x].size()){
            x++;
            y = 0;
        }
        return x < vec.size(); 
    }
};

/**
 * Your Vector2D object will be instantiated and called as such:
 * Vector2D i(vec2d);
 * while (i.hasNext()) cout << i.next();
 */
 
 
 class Vector2D {
public:
    Vector2D(vector<vector<int>>& vec2d) {
        for (auto a : vec2d) {
            v.insert(v.end(), a.begin(), a.end());
        }    
    }
    int next() {
        return v[i++];
    }
    bool hasNext() {
        return i < v.size();
    }
private:
    vector<int> v;
    int i = 0;
};
